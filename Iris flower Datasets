A picture classification in machine learning that aims to classify iris flowers amongst three species(setosa, vesicolor, or virginica) from measurements of sepal and petals
length and width. The iris data set contains 3 classes of 50 instances each, where each class refers to a type of iris plant. The goal is to design a model that makes useful
classifications for new flowers or, in other words, one which exhibits good generalization.


import pandas # Used for data science/ data analysis and machine learning tasks
import numpy # Another python library used for working with arrays, which contain functions for working with linear algebra and matrices
import matplotlib #Cross platform, data visualization and graphical plotting library and it's numerical extension is NumPy
import seaborn #Also is a python data visualization library which is based on matplotlib and provides high-level interface for informative statistical graphics and seaborn is a another data-
                visualization library that is based on matplotlib, also is for statistical graphics

from sklearn.datasets import load_iris #Collects the iris datasets that was uploaded online

data = load_iris # looks through the data

data # displays the data on the screen

data.feature_names # displays the data and the heading of the sets collected

data.target_names # displays the groups the data is classified in

print(data.DESCR) # Checks the description of the data where it talks about image classification, what type it is, it's characteristics, who was the first to use the database analysis etc.

x = pandas.DataFrame(data.data,columns=data.feature_names) # converts the data into pandas dataframe, this is done before plotting the graphs

x['target']= data.target #adds target to the graphics one wishes to diaplay

x.head() #when you first wish to view the first five rows inorder to plot the graph of the collected datasets

seaborn.pairplot # Shows all the graphs in  different categories, being the sepal length, petal length and the target, this is just also show how all the data correlates with each other

x.corr() #If it happens that your data correlates one side, this then shows all the data and correlations

seaborn.heatmap(x.corr(), annot = True, cmap ="coolwarm") #you can also set cmap as a heatmap or YIGnBU color as well

x.plot(kind ='box', subplots=True, layout =(3,2), figsize(8,12)) #plots cats and whiskers graph. This is just just an example, you can place in any numbersets so to analyze your numbers

seaborn.catplot(x ='petal length(cm)',  y='petal width(cm)', palette='husl', hue='target', data=x) #scatterplot and one can then see correlation and classifications are moving in the same direction

x.describe() #Shows the datatypes of the datasets and the statistical information when maybe wanting to do something else with it, especially when it comes to visualizing 

x(x.groupby('target').size()) # displays target on screen as well


